# 1 "PortLexer.mll"
 
    open Lexing
    open PortParser

    exception Lexing_error of string

    let kwd_tbl = ["enquanto",WHILE; "se",IF; "entao",THEN; "senao",ELSE; "e",AND; "ou",OR; "def",SET; "mostra",PRINT;"testar",TEST;"feito",DONE;"faz",DO; "verdade", CST (Bool true); "falso", CST (Bool false);
    "para", FOR; "ate", TO;]

    let id_or_kwd s =
        try List.assoc s kwd_tbl with _ -> IDENT s

    let newline lexbuf =
        let pos = lexbuf.lex_curr_p in
            lexbuf.lex_curr_p <- {pos with pos_lnum = pos.pos_lnum + 1; pos_bol = pos.pos_cnum}

# 19 "PortLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\231\255\232\255\078\000\235\255\236\255\237\255\238\255\
    \239\255\240\255\002\000\003\000\245\255\247\255\248\255\004\000\
    \250\255\002\000\088\000\253\255\254\255\255\255\246\255\244\255\
    \243\255\165\000\175\000\016\000\253\255\254\255\045\000\255\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\013\000\014\000\255\255\255\255\255\255\006\000\
    \255\255\004\000\003\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\255\255\255\255\255\255\001\000\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\029\000\000\000\000\000\255\255\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\017\000\021\000\017\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\017\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\013\000\019\000\020\000\005\000\016\000\022\000\015\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\030\000\002\000\011\000\012\000\010\000\024\000\
    \023\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\009\000\031\000\008\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\007\000\025\000\006\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\000\000\000\000\000\000\000\000\018\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\025\000\000\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\017\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\017\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\015\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\027\000\000\000\000\000\000\000\000\000\010\000\
    \011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\030\000\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\255\255\255\255\255\255\255\255\018\000\
    \255\255\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\025\000\255\255\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \027\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 26 "PortLexer.mll"
           (newline lexbuf; token lexbuf)
# 172 "PortLexer.ml"

  | 1 ->
# 27 "PortLexer.mll"
          (PLUS)
# 177 "PortLexer.ml"

  | 2 ->
# 28 "PortLexer.mll"
          (TIMES)
# 182 "PortLexer.ml"

  | 3 ->
let
# 29 "PortLexer.mll"
               id
# 188 "PortLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 29 "PortLexer.mll"
                  ( id_or_kwd id )
# 192 "PortLexer.ml"

  | 4 ->
# 30 "PortLexer.mll"
             (token lexbuf)
# 197 "PortLexer.ml"

  | 5 ->
# 31 "PortLexer.mll"
          (MINUS)
# 202 "PortLexer.ml"

  | 6 ->
# 32 "PortLexer.mll"
          (DIV)
# 207 "PortLexer.ml"

  | 7 ->
# 33 "PortLexer.mll"
          (LP)
# 212 "PortLexer.ml"

  | 8 ->
# 34 "PortLexer.mll"
          (RP)
# 217 "PortLexer.ml"

  | 9 ->
# 35 "PortLexer.mll"
           (comment lexbuf)
# 222 "PortLexer.ml"

  | 10 ->
# 36 "PortLexer.mll"
          (EQ)
# 227 "PortLexer.ml"

  | 11 ->
# 37 "PortLexer.mll"
           (LEQ)
# 232 "PortLexer.ml"

  | 12 ->
# 38 "PortLexer.mll"
           (BEQ)
# 237 "PortLexer.ml"

  | 13 ->
# 39 "PortLexer.mll"
          (BIG)
# 242 "PortLexer.ml"

  | 14 ->
# 40 "PortLexer.mll"
          (LESS)
# 247 "PortLexer.ml"

  | 15 ->
# 41 "PortLexer.mll"
          (LRP)
# 252 "PortLexer.ml"

  | 16 ->
# 42 "PortLexer.mll"
          (RRP)
# 257 "PortLexer.ml"

  | 17 ->
# 43 "PortLexer.mll"
          (LB)
# 262 "PortLexer.ml"

  | 18 ->
# 44 "PortLexer.mll"
          (RB)
# 267 "PortLexer.ml"

  | 19 ->
# 45 "PortLexer.mll"
          (COLON)
# 272 "PortLexer.ml"

  | 20 ->
# 46 "PortLexer.mll"
          (EOF)
# 277 "PortLexer.ml"

  | 21 ->
let
# 47 "PortLexer.mll"
                 i
# 283 "PortLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 47 "PortLexer.mll"
                   ( CST (Int (int_of_string i) ))
# 287 "PortLexer.ml"

  | 22 ->
let
# 48 "PortLexer.mll"
                f
# 293 "PortLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 48 "PortLexer.mll"
                  ( CST ( Float (float_of_string f) ))
# 297 "PortLexer.ml"

  | 23 ->
# 49 "PortLexer.mll"
          (SEMICOLON)
# 302 "PortLexer.ml"

  | 24 ->
let
# 50 "PortLexer.mll"
           c
# 308 "PortLexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 50 "PortLexer.mll"
             (raise (let x = (Printf.sprintf "%c" c) in (Lexing_error ("Valor " ^ x ^ " desconhecido"))))
# 312 "PortLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 27
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 53 "PortLexer.mll"
             (token lexbuf)
# 324 "PortLexer.ml"

  | 1 ->
# 54 "PortLexer.mll"
          (comment lexbuf)
# 329 "PortLexer.ml"

  | 2 ->
# 55 "PortLexer.mll"
          (raise (Lexing_error "eof" ))
# 334 "PortLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

